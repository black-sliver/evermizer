name: Build

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    strategy:
      matrix:
        include:
        - OS: windows-latest
          EXE: evermizer.exe
          NAME: evermizer_win64
        - OS: ubuntu-20.04  # update april 2025
          EXE: evermizer
          NAME: evermizer_ubuntu2204

    runs-on: ${{matrix.OS}}
    name: ${{matrix.OS}} Build

    steps:
    - uses: actions/checkout@v4
    - uses: msys2/setup-msys2@v2
      if: runner.os == 'Windows'
      with:
        msystem: MINGW64
        pacboy: make:p gcc:p
    - name: Build
      shell: bash
      run: |
        CC=gcc make -j4
    - name: Check Build
      run: |
        ./${{matrix.EXE}} -b --version
        ./${{matrix.EXE}} -b --help
    - uses: actions/upload-artifact@v4
      with:
        name: ${{matrix.NAME}}
        path: ${{matrix.EXE}}
    - name: Dump settings.json
      if: runner.os == 'Linux'
      run: |
        ./evermizer --settings.json > settings.json
    - uses: actions/upload-artifact@v4
      if: runner.os == 'Linux'
      with:
        name: settings_json
        path: settings.json
        overwrite: true

  build-wasm:
    runs-on: ubuntu-latest
    name: WASM Build

    steps:
    - uses: actions/checkout@v4
    - uses: mymindstorm/setup-emsdk@v14
    - name: Install closure-compiler
      run: |
        npm i google-closure-compiler
        echo '#!/bin/sh' > google-closure-compiler
        echo 'npm exec -- google-closure-compiler "$@"' >> google-closure-compiler
        chmod a+rx google-closure-compiler
        mv google-closure-compiler /usr/local/bin/
        google-closure-compiler --version
    - name: Build
      run: |
        make wasm
    - uses: actions/upload-artifact@v4
      with:
        name: evermizer_wasm
        path: |
          evermizer.js
          evermizer.wasm

  build_preview:
    runs-on: ubuntu-latest
    needs:
    - build-wasm

    steps:
    - uses: actions/checkout@v4
      with:
        repository: 'black-sliver/evermizer-wasm-ui'
    - name: Build wasm ui
      run: |
        npm i --dev
        npm run build
        cd dist
        php index.php > index.html
        rm *.php
        rm -r views
        rm -r distribution  # until there is a JS fallback
        cd ..
    - uses: actions/download-artifact@v4
      with:
        name: evermizer_wasm
        path: dist/evermizer.js/v000
    - name: "Organize files"
      run: |
        mkdir -p out/preview
        mv dist out/preview/master
        echo "Visit ./preview/master/ for the UI preview" >> out/index.html
    - uses: actions/upload-artifact@v4
      with:
        name: "github-pages"
        path: "out/**"

  publish_preview:
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref_name == 'master')
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    needs:
      - build_preview

    steps:
    - uses: actions/deploy-pages@v4
      id: deployment
